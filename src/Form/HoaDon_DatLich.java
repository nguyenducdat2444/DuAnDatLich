/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Form;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.atomic.AtomicInteger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import response.HDCTResponse;
import response.HoaDonRespone;
import response.LichHenResponse;
import repository.HDCTRepository;
import repository.HoaDonRepository;
import repository.LichHenRepository;

/**
 *
 * @author Admin
 */
public class HoaDon_DatLich extends javax.swing.JPanel {

    private HoaDonRepository hdRepo = new HoaDonRepository();
    private HDCTRepository HDCTRepo = new HDCTRepository();
    private LichHenRepository LHRepo = new LichHenRepository();

    DefaultTableModel dtmHoaDon = new DefaultTableModel();
    DefaultTableModel dtmHDCT = new DefaultTableModel();
    DefaultTableModel dtmLichHen = new DefaultTableModel();
    int vt;

    /**
     * Creates new form HoaDon
     */
    public HoaDon_DatLich() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int screenWidth = screenSize.width;
        int screenHeight = screenSize.height;
        setPreferredSize(new Dimension(screenWidth, screenHeight));
        dtmHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        dtmHDCT = (DefaultTableModel) tblHDCT.getModel();
        dtmLichHen = (DefaultTableModel) tblLichHen.getModel();
        this.showTableHoaDon(hdRepo.getAll());

//       setLayout(new BorderLayout());
    }

    public void showQR(HoaDonRespone hdQR) {
        dtmHoaDon.setRowCount(0);
        dtmHoaDon.addRow(new Object[]{
            1,
            hdQR.getMaHD(), hdQR.getTenKH(), hdQR.getSdtKH(),
            hdQR.getNgayTao(), hdQR.getMaNV(), hdQR.getTongTien() + "đ",
            hdQR.getTrangThai() == 0 ? "Đã Thanh Toán" : "Chưa Thanh Toán"
        });

    }

    private void showTableHoaDon(ArrayList<HoaDonRespone> lists) {
        dtmHoaDon.setRowCount(0);
        AtomicInteger index = new AtomicInteger(1);
        lists.forEach(s -> dtmHoaDon.addRow(new Object[]{
            index.getAndIncrement(),
            s.getMaHD(),
            s.getTenKH(),
            s.getSdtKH(),
            s.getNgayTao(),
            s.getMaNV(), 
            s.getTongTien() + "đ",
            s.getTrangThai() == 0 ? "Đã Thanh Toán" : "Chưa Thanh Toán"
        }));
    }

    private void showTabelHDCT(ArrayList<HDCTResponse> lists) {
        dtmHDCT.setRowCount(0);
        AtomicInteger index = new AtomicInteger(1);
        lists.forEach(s -> {
            dtmHDCT.addRow(new Object[]{
                index.getAndIncrement(), 
                s.getIdHDCT(), 
                s.getMaDV(),
                s.getTenDV(),
                s.getSoLuong(),
                s.getDonGia() + "đ",
                (s.getSoLuong() * s.getDonGia()) +"đ"
            });
            HDCTRepo.UpdateTien(s.getSoLuong(), s.getDonGia(), s.getIdHDCT());
        });
    }

    private void showTabelLichHen(ArrayList<LichHenResponse> lists) {
        dtmLichHen.setRowCount(0);
        AtomicInteger index = new AtomicInteger(1);
        lists.forEach(s -> dtmLichHen.addRow(new Object[]{
            index.getAndIncrement(), s.getIdLH(), s.getMaHD(), s.getNgayHen(),
            s.getGioHen(),
            //s.getTienCoc(),
            s.getTrangThai() == 1 ? "Đang Chờ" : "Đã Hủy"
        }));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHDCT = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLichHen = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        lblSearch = new javax.swing.JTextField();
        cbxTrangThai = new javax.swing.JComboBox<>();
        btnExcel = new javax.swing.JButton();
        btnQR = new javax.swing.JButton();
        btnPDF = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa Đơn Thanh Toán"));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Hóa Đơn", "Tên Khách Hàng", "SDT", "Ngày Tạo", "Mã Nhân Viên", "Tổng TIền ", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa Đơn Chi Tiết"));

        tblHDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID_HDCT", "Mã DV", "Tên DV", "Số Lượng ", "Đơn Giá", "Tổng Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblHDCT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Lịch Hẹn"));

        tblLichHen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Lịch Hẹn", "Mã HD", "Ngày Hẹn", "Giờ Hẹn", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblLichHen);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Search.png"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cbxTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hóa đơn chưa thanh toán", "Hoá đơn đã thanh toán", "Tất cả" }));

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/xls.png"))); // NOI18N
        btnExcel.setText("Xuất Exel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        btnQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/app.png"))); // NOI18N
        btnQR.setText("Quét QR");
        btnQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQRActionPerformed(evt);
            }
        });

        btnPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pdf.png"))); // NOI18N
        btnPDF.setText("Xuất PDF");
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("Hóa Đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnQR)
                        .addGap(18, 18, 18)
                        .addComponent(btnPDF)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcel)
                        .addGap(117, 117, 117)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(615, 615, 615))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnQR)
                    .addComponent(btnPDF)
                    .addComponent(btnExcel))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        vt = tblHoaDon.getSelectedRow();
        String maHD = tblHoaDon.getValueAt(vt, 1).toString();

        this.showTabelHDCT(HDCTRepo.getAll(maHD));
        this.showTabelLichHen(LHRepo.getAll(maHD));
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        int trangThai = cbxTrangThai.getSelectedIndex();
        String text = lblSearch.getText();
        if (trangThai == 1 || trangThai == 0) {
            showTableHoaDon(hdRepo.search(trangThai, text));
        } else {
            showTableHoaDon(hdRepo.getAll());
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQRActionPerformed
        // TODO add your handling code here:
        new AgainQR(this, true).setVisible(true);
//       qr.textResutl();
//        System.out.println(qr.textResutl());


    }//GEN-LAST:event_btnQRActionPerformed

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
        // TODO add your handling code here:

       int vt = tblHoaDon.getSelectedRow();
        if (vt == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn trước khi xuất PDF");
            return;
        } else {
            String path = "";
            JFileChooser j = new JFileChooser();
            j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int x = j.showSaveDialog(this);
            if (x == JFileChooser.APPROVE_OPTION) {
                path = j.getSelectedFile().getPath();
            }

            if (!path.endsWith("/")) {
                path += "/";
            }

            Document doc = new Document();
            try {
                PdfWriter.getInstance(doc, new FileOutputStream(path + "hoadon.pdf"));
                doc.open();

                Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14);
                Font contentFont = FontFactory.getFont(FontFactory.HELVETICA, 12);

                // Thông tin hóa đơn
                doc.add(new Paragraph("HOA DON", titleFont));
                doc.add(new Paragraph("STT: " + getValueAt(tblHoaDon, vt, 0), contentFont));
                doc.add(new Paragraph("Mã Hóa Đơn: " + getValueAt(tblHoaDon, vt, 1), contentFont));
                doc.add(new Paragraph("Tên Khách Hàng: " + getValueAt(tblHoaDon, vt, 2), contentFont));
                doc.add(new Paragraph("SĐT: " + getValueAt(tblHoaDon, vt, 3), contentFont));
                doc.add(new Paragraph("Ngày Tạo: " + getValueAt(tblHoaDon, vt, 4), contentFont));
//                doc.add(new Paragraph("Ngày Sửa: " + getValueAt(tblHoaDon, vt, 5), contentFont));
                doc.add(new Paragraph("Mã NV: " + getValueAt(tblHoaDon, vt, 5), contentFont));
                doc.add(new Paragraph("Tổng Tiền: " + getValueAt(tblHoaDon, vt, 6), contentFont));
                doc.add(new Paragraph("Trạng Thái: " + getValueAt(tblHoaDon, vt, 7), contentFont));

                doc.add(new Paragraph(" ")); // Thêm khoảng trống

                // Chi tiết hóa đơn
                doc.add(new Paragraph("CHI TIẾT HÓA ĐƠN", titleFont));
                for (int i = 0; i < this.tblHDCT.getRowCount(); i++) {
                    doc.add(new Paragraph("STT: " + getValueAt(tblHDCT, i, 0), contentFont));
                    doc.add(new Paragraph("ID_HD: " + getValueAt(tblHDCT, i, 1), contentFont));
                    doc.add(new Paragraph("Mã DV: " + getValueAt(tblHDCT, i, 2), contentFont));
                    doc.add(new Paragraph("Tên DV: " + getValueAt(tblHDCT, i, 3), contentFont));
                    doc.add(new Paragraph("Số Lượng: " + getValueAt(tblHDCT, i, 4), contentFont));
                    doc.add(new Paragraph("Đơn Giá: " + getValueAt(tblHDCT, i, 5), contentFont));
                    doc.add(new Paragraph("Tổng Tiền: " + getValueAt(tblHDCT, i, 6), contentFont));
                    doc.add(new Paragraph(" ")); // Thêm khoảng trống giữa các chi tiết
                }

                // Lịch hẹn
                doc.add(new Paragraph("LỊCH HẸN", titleFont));
                for (int i = 0; i < this.tblLichHen.getRowCount(); i++) {
                    doc.add(new Paragraph("STT: " + getValueAt(tblLichHen, i, 0), contentFont));
                    doc.add(new Paragraph("Mã Lịch Hẹn: " + getValueAt(tblLichHen, i, 1), contentFont));
                    doc.add(new Paragraph("Mã Hóa Đơn: " + getValueAt(tblLichHen, i, 2), contentFont));
                    doc.add(new Paragraph("Ngày Hẹn: " + getValueAt(tblLichHen, i, 3), contentFont));
                    doc.add(new Paragraph("Giờ Hẹn: " + getValueAt(tblLichHen, i, 4), contentFont));
//                    doc.add(new Paragraph("Tiền Cọc: " + getValueAt(tblLichHen, i, 5), contentFont));
                    doc.add(new Paragraph("Trạng Thái: " + getValueAt(tblLichHen, i, 5), contentFont));
                    doc.add(new Paragraph(" ")); // Thêm khoảng trống giữa các chi tiết
                }

                JOptionPane.showMessageDialog(this, "Đã xuất file PDF thành công");
            } catch (Exception e) {
                e.printStackTrace(System.out);
                JOptionPane.showMessageDialog(this, "Có một số lỗi không xác định");
            } finally {
                if (doc.isOpen()) {
                    doc.close();
                }
            }
        }
    }//GEN-LAST:event_btnPDFActionPerformed

    public void openFile(String flie) {
        try {
            File path = new File(flie);
            Desktop.getDesktop().open(path);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = (Sheet) wb.createSheet("customer");
                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tblHoaDon.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tblHoaDon.getColumnName(i));
                }

                for (int i = 0; i < tblHoaDon.getRowCount(); i++) {
                    Row row = sheet.createRow(i + 1);
                    for (int j = 0; j < tblHoaDon.getColumnCount(); j++) {
                        Cell cell = row.createCell(j);
                        if (tblHoaDon.getValueAt(i, j) != null) {
                            cell.setCellValue(tblHoaDon.getValueAt(i, j).toString());
                        }
                    }
                }

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());

            } else {
                JOptionPane.showMessageDialog(null, " Xuất file exle thất bại");
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException io) {
            io.printStackTrace();
        }

    }//GEN-LAST:event_btnExcelActionPerformed
    private String getValueAt(JTable table, int row, int column) {
        Object value = table.getValueAt(row, column);
        return value == null ? "" : value.toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnPDF;
    private javax.swing.JButton btnQR;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbxTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lblSearch;
    private javax.swing.JTable tblHDCT;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblLichHen;
    // End of variables declaration//GEN-END:variables
}
